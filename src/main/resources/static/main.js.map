{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/clone-dialog/clone-dialog.component.css","webpack:///./src/app/clone-dialog/clone-dialog.component.html","webpack:///./src/app/clone-dialog/clone-dialog.component.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/security-dialog/security-dialog.component.css","webpack:///./src/app/security-dialog/security-dialog.component.html","webpack:///./src/app/security-dialog/security-dialog.component.ts","webpack:///./src/app/start-dialog/start-dialog.component.css","webpack:///./src/app/start-dialog/start-dialog.component.html","webpack:///./src/app/start-dialog/start-dialog.component.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/app/tree/tree.component.css","webpack:///./src/app/tree/tree.component.html","webpack:///./src/app/tree/tree.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TestComponent }      from './test/test.component';\n\nconst routes: Routes = [\n  { path: 'test', component: TestComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n.drawer{\\n    height: 100vh;\\n}\\nbutton{\\n    padding-left: 6px;\\n    padding-right: 6px;\\n    min-width: 0px;\\n    margin: 0 6px;\\n}\\nmat-toolbar button{\\n    background-color: rgb(92, 116, 221);\\n    color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksbUNBQW1DO0lBQ25DLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmRyYXdlcntcbiAgICBoZWlnaHQ6IDEwMHZoO1xufVxuYnV0dG9ue1xuICAgIHBhZGRpbmctbGVmdDogNnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDZweDtcbiAgICBtaW4td2lkdGg6IDBweDtcbiAgICBtYXJnaW46IDAgNnB4O1xufVxubWF0LXRvb2xiYXIgYnV0dG9ue1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig5MiwgMTE2LCAyMjEpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cbiJdfQ== */\"","module.exports = \"<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\n\\n<mat-drawer-container autosize class=\\\"drawer\\\" (contextmenu)=\\\"rightClick()\\\">\\n    <mat-drawer mode=\\\"side\\\" opened>\\n        <app-main-menu [selection]=\\\"selection\\\"></app-main-menu>\\n    </mat-drawer>\\n\\n\\n    <mat-toolbar>\\n        <!-- <button mat-button><i class=\\\"material-icons\\\">add_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">cancel</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">pause_circle_filled</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">play_circle_filled</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">drafts</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">swap_vertical_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">supervised_user_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">description</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">save</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">ac_unit</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">whatshot</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">visibility</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">face</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">receipt</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">bug_report</i></button> -->\\n        <button mat-button (click)=\\\"sayHello()\\\">Say Hello</button>\\n        <button mat-button (click)=\\\"changeName()\\\">Change name</button>\\n        <button mat-button routerLink=\\\"/test\\\" (click)=\\\"expand()\\\">Router Test</button>\\n    </mat-toolbar>\\n\\n    <div style=\\\"display: grid; grid-template-rows: 100%; height: 90%;\\\" [style.grid-template-columns]=\\\"gridlayout\\\">\\n        <!-- FIXME: standard divs are preferred over mat-card -->\\n        <mat-card class=\\\"card\\\">\\n            <app-tree (emitter)=\\\"eventListener($event)\\\"></app-tree>\\n        </mat-card>\\n\\n        <mat-card class=\\\"card\\\">\\n            <p>{{return}}</p>\\n        </mat-card>\\n\\n        <div>\\n            <router-outlet></router-outlet>\\n            <button mat-button routerLink=\\\"/\\\" (click)=\\\"unexpand()\\\">Close</button>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n</mat-drawer-container>\"","import {\n    Component\n} from '@angular/core';\nimport {\n    HttpClient,\n    HttpParams,\n    HttpResponse\n} from '@angular/common/http';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    title = 'Test-sb';\n    return = '';\n    gridlayout = '50% 50%';\n\n    constructor(private http: HttpClient) {}\n\n    private sayHello(): void {\n        this.return = 'loading...';\n        this.http.get('http://localhost:2020/hello-world', {\n            responseType: 'text'\n        }).subscribe(data => console.log(data));\n        this.http.get('http://localhost:2020/hello-world', {\n            responseType: 'text'\n        }).subscribe(data => this.return = data);\n    }\n\n    // choose between GET and POST method\n\n    private changeName(): void {\n        let params = new HttpParams().set(\"name\", \"matteo\");\n        this.http.get('http://localhost:2020/changeName', {\n            params: params\n        }).subscribe(data => console.log(data));\n    }\n\n    // to use if POST method is preferred, need JSON parsing\n    // \n    // private changeName(): any{\n    //   let params = new HttpParams().set(\"name\",'Matteo'); //Create new HttpParams\n    //   return this.http.post('http://localhost:2020/changeName', {params: params}).subscribe(data => console.log(data));\n    // }\n\n    private expand(): void {\n        this.gridlayout = '33.3% 33.4% 33.3%';\n    }\n\n    private unexpand(): void {\n        this.gridlayout = '50% 50%';\n    }\n\n    rightClick() {\n        console.log(\"right click\");\n        // return false;\n    }\n\n\n    selection = '';\n    eventListener($event){\n        this.selection = $event;\n    }\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TestComponent } from './test/test.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component'; \nimport { StartDialogComponent } from './start-dialog/start-dialog.component'\nimport { CloneDialogComponent } from './clone-dialog/clone-dialog.component'; \nimport { SecurityDialogComponent } from './security-dialog/security-dialog.component';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatSidenavModule} from '@angular/material/sidenav'; \nimport {MatExpansionModule} from '@angular/material/expansion'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material/input'; \nimport {MatFormFieldModule} from '@angular/material';\nimport {MatListModule} from '@angular/material/list'; \nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport { TreeComponent } from './tree/tree.component'; \nimport {MatIconModule} from '@angular/material/icon'; \n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    MainMenuComponent,\n    StartDialogComponent,\n    CloneDialogComponent,\n    SecurityDialogComponent,\n    TreeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatTreeModule,\n    MatSnackBarModule,\n    CdkTreeModule,\n    MatIconModule,\n  ],\n  entryComponents: [StartDialogComponent,\n                    CloneDialogComponent,\n                    SecurityDialogComponent,\n                  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport class PizzaPartyAppModule { }\n","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xvbmUtZGlhbG9nL2Nsb25lLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2Nsb25lLWRpYWxvZy9jbG9uZS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n  <h2>{{title}} agent</h2>\\n</section>\\n\\n<mat-list role=\\\"list\\\">\\n  <mat-list-item role=\\\"listitem\\\" *ngIf=\\\"title=='Clone'\\\">\\n    <form>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Agent new name\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-list-item>\\n  <mat-list-item role=\\\"listitem\\\">\\n    <form>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Container\\\" [(ngModel)]=\\\"cont\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-list-item>\\n</mat-list>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams,\n    HttpResponse\n} from '@angular/common/http';\n\n@Component({\n    selector: 'app-clone-dialog',\n    templateUrl: './clone-dialog.component.html',\n    styleUrls: ['./clone-dialog.component.css']\n})\n\nexport class CloneDialogComponent implements OnInit {\n\n    title = '';\n    name = '';\n    cont = '';\n\n    selection :string;\n\n    constructor(private dialogRef: MatDialogRef < CloneDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {}\n\n    ngOnInit() {\n        console.log(this.data)\n        this.title = this.data[1];\n        this.selection = this.data[2];\n    }\n\n    private send(): void {\n        if (this.title == 'Clone') {\n            let params = new HttpParams().set(\"name\", this.selection).set(\"container\", this.cont).set(\"newname\", this.name);\n            this.http.get('http://localhost:2020/clone', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'Migrate') {\n            let params = new HttpParams().set(\"name\", this.selection).set(\"container\", this.cont);\n            this.http.get('http://localhost:2020/migrate', {\n                params: params\n            }).subscribe(data => console.log(data));\n        }\n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","module.exports = \"\\nmat-expansion-panel p{\\n    cursor: pointer;\\n}\\nmat-expansion-panel p:hover{\\n    color: rgb(92, 116, 221);\\n    background-color: rgba(1, 1, 1, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1tZW51L21haW4tbWVudS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLHdCQUF3QjtJQUN4QixvQ0FBb0M7QUFDeEMiLCJmaWxlIjoic3JjL2FwcC9tYWluLW1lbnUvbWFpbi1tZW51LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbm1hdC1leHBhbnNpb24tcGFuZWwgcHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5tYXQtZXhwYW5zaW9uLXBhbmVsIHA6aG92ZXJ7XG4gICAgY29sb3I6IHJnYig5MiwgMTE2LCAyMjEpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMSwgMSwgMSwgMC4xKTtcbn0iXX0= */\"","module.exports = \"<mat-accordion>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    File\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>Close RMA agent</p>\\n          <p>Exit this container</p>\\n          <p>Shut down AgentPlatform</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Actions\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p (click)=\\\"startDialog()\\\">Start new agent</p>\\n          <p (click)=\\\"securityDialog('kill')\\\">Kill</p>\\n          <p (click)=\\\"securityDialog('suspend')\\\">Suspend</p>\\n          <p (click)=\\\"securityDialog('resume')\\\">Resume</p>\\n          <!-- <p (click)=\\\"messageDialog()\\\">Send message</p> -->\\n          <p (click)=\\\"cloneDialog('Migrate')\\\">Migrate agent</p>\\n          <p (click)=\\\"cloneDialog('Clone')\\\">Clone agent</p>\\n          <p>Load agent</p>\\n          <p (click)=\\\"securityDialog('save')\\\">Save agent</p>\\n          <p (click)=\\\"securityDialog('freeze')\\\">Freeze agent</p>\\n          <!-- FIXME: THAW need a container as input, maybe cloneDialog can be used -->\\n          <p>Thaw agent</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Tools\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p routerLink=\\\"/sniffer\\\">Start sniffer</p>\\n          <p>Start dummy agent</p>\\n          <p>Show the DF GUI</p>\\n          <p routerLink=\\\"/introspector\\\">Start introspector agent</p>\\n          <p routerLink=\\\"/logmanager\\\">Start log manager agent</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Remote Platforms\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>Add platform via AMS AID</p>\\n          <p>Add platform via URL</p>\\n          <p>View AP description</p>\\n          <p>Refresh AP description</p>\\n          <p>Remove remote platform</p>\\n          <p>Refresh agent list</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Help\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>About Jade</p>\\n     </mat-expansion-panel>\\n</mat-accordion>\"","import {\n    Component,\n    OnInit,\n    Input\n} from '@angular/core';\nimport {\n    MatDialog,\n    MatDialogRef,\n    MatSnackBar\n} from '@angular/material';\nimport {\n    StartDialogComponent\n} from '../start-dialog/start-dialog.component'\nimport {\n    CloneDialogComponent\n} from '../clone-dialog/clone-dialog.component'\nimport {\n    SecurityDialogComponent\n} from '../security-dialog/security-dialog.component'\n\n@Component({\n    selector: 'app-main-menu',\n    templateUrl: './main-menu.component.html',\n    styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n    ngOnInit() {}\n\n    @Input() selection = '';\n\n    startDialogRef: MatDialogRef < StartDialogComponent > ;\n    cloneDialogRef: MatDialogRef < CloneDialogComponent > ;\n    securityDialogRef: MatDialogRef < SecurityDialogComponent > ;\n\n    constructor(private dialog: MatDialog, private snackBar: MatSnackBar) {}\n\n\n    startDialog() {\n        this.startDialogRef = this.dialog.open(StartDialogComponent);\n    }\n\n    cloneDialog(title: string) {\n        this.cloneDialogRef = this.dialog.open(CloneDialogComponent, {\n            data: {\n                1: title,\n                2: this.selection\n            }\n        });\n        this.snackBar.open(\"Warning: Some agents might not be able to migrate or be cloned because of lack of serialization support in their implementation. If you are not sure about the  implemementation of this agent, Cancel this operation.\", \"Dismiss\", {\n            duration: 16000,\n        });\n    }\n\n    securityDialog(title: string) {\n        this.securityDialogRef = this.dialog.open(SecurityDialogComponent, {\n            data: {\n                1: title,\n                2: this.selection\n            }\n        });\n    }\n\n}","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VjdXJpdHktZGlhbG9nL3NlY3VyaXR5LWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3NlY3VyaXR5LWRpYWxvZy9zZWN1cml0eS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <h3>Are you sure you want to {{title}} this agent?</h3>\\n</section>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams,\n    HttpResponse\n} from '@angular/common/http';\nimport { TreeComponent } from '../tree/tree.component';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n    selector: 'app-security-dialog',\n    templateUrl: './security-dialog.component.html',\n    styleUrls: ['./security-dialog.component.css']\n})\nexport class SecurityDialogComponent implements OnInit {\n\n    title = '';\n\n    selection: string;\n\n\n    constructor(private dialogRef: MatDialogRef < SecurityDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {}\n\n    ngOnInit() {\n        console.log(this.data)\n        this.title = this.data[1];\n        this.selection = this.data[2];\n    }\n\n    private send(): void {\n        console.log(this.selection);\n        let params = new HttpParams().set(\"name\", this.selection);\n        if (this.title == 'kill') {\n            this.http.get('http://localhost:2020/kill', {params: params}).subscribe(data => console.log(data));\n        } else if (this.title == 'suspend') {\n            this.http.get('http://localhost:2020/suspend', {params: params}).subscribe(data => console.log(data));\n        } else if (this.title == 'resume') {\n            this.http.get('http://localhost:2020/resume', {params: params}).subscribe(data => console.log(data));\n        } else if (this.title == 'freeze') {\n            this.http.get('http://localhost:2020/freeze', {params: params}).subscribe(data => console.log(data));\n        } else if (this.title == 'thaw') {\n            this.http.get('http://localhost:2020/thaw', {params: params}).subscribe(data => console.log(data));\n        } else if (this.title == 'save') {\n            this.http.get('http://localhost:2020/save', {params: params}).subscribe(data => console.log(data));\n        } \n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhcnQtZGlhbG9nL3N0YXJ0LWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3N0YXJ0LWRpYWxvZy9zdGFydC1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <h2>Start new agent</h2>\\n</section>\\n\\n<mat-list role=\\\"list\\\">\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Agent name\\\" [(ngModel)]=\\\"name\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Class name\\\" [(ngModel)]=\\\"clas\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Arguments\\\" [(ngModel)]=\\\"args\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Owner\\\" [(ngModel)]=\\\"own\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Container\\\" [(ngModel)]=\\\"cont\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n</mat-list>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams,\n    HttpResponse\n} from '@angular/common/http';\n\n@Component({\n    selector: 'app-start-dialog',\n    templateUrl: './start-dialog.component.html',\n    styleUrls: ['./start-dialog.component.css']\n})\n\nexport class StartDialogComponent implements OnInit {\n\n    name = '';\n    clas = 'jade.core.Agent';\n    args = '';\n    own = '';\n    cont = 'MainContainer';\n\n    ngOnInit() {}\n\n    constructor(private dialogRef: MatDialogRef < StartDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {}\n\n    private send(): void {\n        let params = new HttpParams().set(\"name\", this.name).set(\"clas\", this.clas).set(\"args\", this.args).set(\"owner\", this.own).set(\"container\", this.cont);\n        this.http.get('http://localhost:2020/start', {\n            params: params\n        }).subscribe(data => console.log(data));\n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<mat-card class=\\\"card\\\">\\n    <p>\\n      test works!\\n    </p>\\n</mat-card>\\n\\n\"","import {\n    Component,\n    OnInit\n} from '@angular/core';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n    constructor() {}\n\n    ngOnInit() {}\n\n}","module.exports = \".example-tree-invisible {\\n    display: none;\\n  }\\n  \\n  .example-tree ul,\\n  .example-tree li {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    list-style-type: none;\\n  }\\n  \\n  .example-tree-node {\\n    display: block;\\n  }\\n  \\n  .example-tree-node .example-tree-node {\\n    padding-left: 40px;\\n  }\\n  \\n  .example-tree-progress-bar {\\n    margin-left: 30px;\\n  }\\n  \\n  .example-tree-nested-node {\\n    padding-left: 30px;\\n  }\\n  \\n  span:focus{\\n      outline: none;\\n  }\\n  \\n  span{\\n      cursor: pointer;\\n  }\\n  \\n  .focusClass{\\n    background-color: rgb(92, 116, 221);\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJlZS90cmVlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0VBQ2Y7O0VBRUE7O0lBRUUsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixxQkFBcUI7RUFDdkI7O0VBQ0E7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO01BQ0ksYUFBYTtFQUNqQjs7RUFDQTtNQUNJLGVBQWU7RUFDbkI7O0VBQ0E7SUFDRSxtQ0FBbUM7SUFDbkMsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvdHJlZS90cmVlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS10cmVlLWludmlzaWJsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtdHJlZSB1bCxcbiAgLmV4YW1wbGUtdHJlZSBsaSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfVxuICAuZXhhbXBsZS10cmVlLW5vZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIFxuICAuZXhhbXBsZS10cmVlLW5vZGUgLmV4YW1wbGUtdHJlZS1ub2RlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gIH1cblxuICAuZXhhbXBsZS10cmVlLXByb2dyZXNzLWJhciB7XG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIH1cbiAgXG4gIC5leGFtcGxlLXRyZWUtbmVzdGVkLW5vZGUge1xuICAgIHBhZGRpbmctbGVmdDogMzBweDtcbiAgfVxuXG4gIHNwYW46Zm9jdXN7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gIHNwYW57XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgLmZvY3VzQ2xhc3N7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDkyLCAxMTYsIDIyMSk7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9Il19 */\"","module.exports = \"\\n\\n<!-- <button (click)='platformName()'>platformName</button> -->\\n\\n<cdk-tree #tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <!-- This is the tree node template for leaf nodes -->\\n    <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node\\\" class=\\\"example-tree-node\\\">\\n        <!-- use a disabled button to provide padding for tree leaf -->\\n        <button mat-icon-button disabled *ngIf='node.name;else other_content'></button>\\n        <span tabindex=\\\"1\\\" (click)=\\\"focus(node.name)\\\" [ngClass]=\\\"{focusClass: selected == node.name}\\\">\\n            {{node.name}}\\n        </span>\\n        <ng-template #other_content>Qui se non esiste il nome della cartella ma solo gli agenti</ng-template>\\n        <!-- {{node.agents.name}} -->\\n    </cdk-nested-tree-node>\\n    <!-- This is the tree node template for expandable nodes -->\\n    \\n\\n\\n    <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node; when: hasChild\\\" class=\\\"example-tree-node\\\">\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.name\\\" cdkTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <span tabindex=\\\"1\\\" (click)=\\\"focus(node.name)\\\" [ngClass]=\\\"{focusClass: selected == node.name}\\\">\\n            {{node.name}}\\n        </span>\\n        <div [class.example-tree-invisible]=\\\"!treeControl.isExpanded(node)\\\">\\n            <ng-container cdkTreeNodeOutlet></ng-container>\\n        </div>\\n    </cdk-nested-tree-node>\\n</cdk-tree>\\n\\n<button (click)='addContainer()'>Add container test button</button>\"","import {\n    Component,\n    OnInit,\n    ViewChild,\n    Input,\n    Output,\n    AfterViewInit,\n} from '@angular/core';\nimport {\n    ArrayDataSource\n} from '@angular/cdk/collections';\nimport {\n    NestedTreeControl\n} from '@angular/cdk/tree';\nimport {\n    MatTree\n} from '@angular/material';\nimport {\n    platformCoreDynamicTesting\n} from '@angular/platform-browser-dynamic/testing/src/platform_core_dynamic_testing';\nimport {\n    HttpClient\n} from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'app-tree',\n    templateUrl: './tree.component.html',\n    styleUrls: ['./tree.component.css']\n})\nexport class TreeComponent implements OnInit{\n\n    VOID_DATA: Node[] = [];\n    TREE_DATA: Node[] = [];\n    treeControl = new NestedTreeControl < Node > (node => node.childNode);\n    dataSource = new ArrayDataSource(this.TREE_DATA);\n\n    @ViewChild('tree') tree;\n\n    constructor(private http: HttpClient) {}\n    \n    platform = '';\n    container = '';\n    agents :string[] = [];\n\n    selected = '';\n    @Output() emitter = new EventEmitter<string>();\n\n    ngOnInit() {\n        this.populateTree();\n    }\n\n    focus(selected_ :string) :void{\n        this.selected = selected_;\n        // any time there is a click on the tree, the event is sent to parent component\n        this.emitter.emit(this.selected);\n        // FIXME: also on every click the tree is updated\n    }\n\n\n    private populateTree() :void{\n        this.http.get('http://localhost:2020/containerName', {\n            responseType: 'text'\n        }).subscribe(data => {this.container = data; console.log(this.container);\n\n            this.http.get('http://localhost:2020/platformName', {\n            responseType: 'text'\n            }).subscribe(data => {this.platform = data; console.log(this.platform);\n\n                this.http.get('http://localhost:2020/agentsName').subscribe(data => {console.log(data); console.log(typeof data);\n\n                \n                    let agentlist: Node[] = [];\n                    for(let i in data) {\n                        this.agents.push(data[i]);\n                        let ag = new Node(this.agents[i]);\n                        agentlist.push(ag);\n                    }\n                    let maincontainer: Node[] = [{\n                        name: this.container,\n                        childNode: agentlist\n                    }];\n                    let ip: Node[] = [{\n                        name: this.platform,\n                        childNode: maincontainer\n                    }];\n                    this.TREE_DATA.push({\n                        name: 'Agent Platforms',\n                        childNode: ip\n                    });\n                    this.tree.renderNodeChanges(this.TREE_DATA);\n\n                });\n            });\n        });\n\n    }\n\n    addContainer(): void {\n\n        // METODO DI PROVA PER VERIFICARE LA POSSIBILITA DI AGGIORNARE L'ALBERO\n\n        let agentlist: Node[] = [{\n            name: '3'\n        }, {\n            name: '4'\n        }];\n        let newcontainer: Node = {\n            name: 'Second Container',\n            childNode: agentlist\n        };\n        this.TREE_DATA[0].childNode[0].childNode.push(newcontainer);\n        // rendering VOID_DATA is necessary to actually render the modified TREE_DATA\n        this.tree.renderNodeChanges(this.VOID_DATA);\n        this.tree.renderNodeChanges(this.TREE_DATA);\n        console.log(this.TREE_DATA);\n\n    }\n\n\n    hasChild = (_: number, node: Node) => !!node.childNode && node.childNode.length > 0;\n\n}\n\nclass Node {\n\n    name: string = '';\n    childNode ? : Node[];\n\n    constructor(name_, childnode_?){\n        this.name = name_;\n        this.childNode = childnode_;\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}