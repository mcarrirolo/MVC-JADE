{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/clone-dialog/clone-dialog.component.css","webpack:///./src/app/clone-dialog/clone-dialog.component.html","webpack:///./src/app/clone-dialog/clone-dialog.component.ts","webpack:///./src/app/data-transfer.service.ts","webpack:///./src/app/main-menu/main-menu.component.css","webpack:///./src/app/main-menu/main-menu.component.html","webpack:///./src/app/main-menu/main-menu.component.ts","webpack:///./src/app/security-dialog/security-dialog.component.css","webpack:///./src/app/security-dialog/security-dialog.component.html","webpack:///./src/app/security-dialog/security-dialog.component.ts","webpack:///./src/app/start-dialog/start-dialog.component.css","webpack:///./src/app/start-dialog/start-dialog.component.html","webpack:///./src/app/start-dialog/start-dialog.component.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/app/tree/tree.component.css","webpack:///./src/app/tree/tree.component.html","webpack:///./src/app/tree/tree.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TestComponent }      from './test/test.component';\n\nconst routes: Routes = [\n  { path: 'test', component: TestComponent, data : {name : 'some value passed on route'}},\n  { path: 'sniffer', component: TestComponent, data : {name : 'sniffer'}},\n  { path: 'dummy', component: TestComponent, data : {name : 'dummy'}},\n  { path: 'introspector', component: TestComponent, data : {name : 'introspector'}},\n  { path: 'log', component: TestComponent, data : {name : 'log-manager'}}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n.drawer{\\n    height: 100vh;\\n    background-color: white;\\n}\\nbutton{\\n    padding-left: 6px;\\n    padding-right: 6px;\\n    min-width: 0px;\\n    margin: 0 6px;\\n}\\nmat-toolbar button{\\n    background-color: rgb(92, 116, 221);\\n    color: white;\\n}\\ndiv{\\n    font-family: 'Roboto', monospace;\\n}\\n.tree{\\n    width: 40%;\\n    display: inline-table;\\n}\\n.view{\\n    width: calc(60% - 20px);\\n    display: inline-table;\\n    margin: 0 10px;\\n}\\nrouter-outlet{\\n    display: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksbUNBQW1DO0lBQ25DLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksVUFBVTtJQUNWLHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5kcmF3ZXJ7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cbmJ1dHRvbntcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA2cHg7XG4gICAgbWluLXdpZHRoOiAwcHg7XG4gICAgbWFyZ2luOiAwIDZweDtcbn1cbm1hdC10b29sYmFyIGJ1dHRvbntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTIsIDExNiwgMjIxKTtcbiAgICBjb2xvcjogd2hpdGU7XG59XG5kaXZ7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBtb25vc3BhY2U7XG59XG4udHJlZXtcbiAgICB3aWR0aDogNDAlO1xuICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTtcbn1cbi52aWV3e1xuICAgIHdpZHRoOiBjYWxjKDYwJSAtIDIwcHgpO1xuICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTtcbiAgICBtYXJnaW46IDAgMTBweDtcbn1cbnJvdXRlci1vdXRsZXR7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","module.exports = \"<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\n\\n<mat-drawer-container autosize class=\\\"drawer\\\" (contextmenu)=\\\"rightClick()\\\">\\n    <mat-drawer mode=\\\"side\\\" opened>\\n        <app-main-menu></app-main-menu>\\n    </mat-drawer>\\n\\n\\n    <mat-toolbar>\\n        <!-- <button mat-button><i class=\\\"material-icons\\\">add_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">cancel</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">pause_circle_filled</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">play_circle_filled</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">drafts</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">swap_vertical_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">supervised_user_circle</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">description</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">save</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">ac_unit</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">whatshot</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">visibility</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">face</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">receipt</i></button>\\n        <button mat-button><i class=\\\"material-icons\\\">bug_report</i></button> -->\\n        <button mat-button (click)=\\\"sayHello()\\\">Say Hello</button>\\n        <button mat-button (click)=\\\"changeName()\\\">Change name</button>\\n        <button mat-button routerLink=\\\"/test\\\">Router Test</button>\\n    </mat-toolbar>\\n\\n    <div>\\n        <!-- FIXME: standard divs are preferred over mat-card -->\\n        <div class=\\\"tree\\\">\\n            <app-tree></app-tree>\\n        </div>\\n\\n        <!-- <mat-card class=\\\"card\\\">\\n            <p>{{return}}</p>\\n        </mat-card> -->\\n\\n        <div class=\\\"view\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n</mat-drawer-container>\"","import {\n    Component\n} from '@angular/core';\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\nimport { DataTransferService } from './data-transfer.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [DataTransferService]\n})\nexport class AppComponent {\n\n    title = 'Test-sb';\n    return = '';\n    gridlayout = '50% 50%';\n\n    constructor(private http: HttpClient) {}\n\n    private sayHello(): void {\n        this.return = 'loading...';\n        this.http.get('http://localhost:2020/hello-world', {\n            responseType: 'text'\n        }).subscribe(data => console.log(data));\n        this.http.get('http://localhost:2020/hello-world', {\n            responseType: 'text'\n        }).subscribe(data => this.return = data);\n    }\n\n    // choose between GET and POST method\n\n    private changeName(): void {\n        let params = new HttpParams().set(\"name\", \"matteo\");\n        this.http.get('http://localhost:2020/changeName', {\n            params: params\n        }).subscribe(data => console.log(data));\n    }\n\n    // to use if POST method is preferred, need JSON parsing\n    // \n    // private changeName(): any{\n    //   let params = new HttpParams().set(\"name\",'Matteo'); //Create new HttpParams\n    //   return this.http.post('http://localhost:2020/changeName', {params: params}).subscribe(data => console.log(data));\n    // }\n\n    rightClick() {\n        console.log(\"right click\");\n        // return false;\n    }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TestComponent } from './test/test.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component'; \nimport { StartDialogComponent } from './start-dialog/start-dialog.component'\nimport { CloneDialogComponent } from './clone-dialog/clone-dialog.component'; \nimport { SecurityDialogComponent } from './security-dialog/security-dialog.component';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatSidenavModule} from '@angular/material/sidenav'; \nimport {MatExpansionModule} from '@angular/material/expansion'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material/input'; \nimport {MatFormFieldModule} from '@angular/material';\nimport {MatListModule} from '@angular/material/list'; \nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport { TreeComponent } from './tree/tree.component'; \nimport {MatIconModule} from '@angular/material/icon'; \n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    MainMenuComponent,\n    StartDialogComponent,\n    CloneDialogComponent,\n    SecurityDialogComponent,\n    TreeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatTreeModule,\n    MatSnackBarModule,\n    CdkTreeModule,\n    MatIconModule,\n  ],\n  entryComponents: [StartDialogComponent,\n                    CloneDialogComponent,\n                    SecurityDialogComponent,\n                  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport class PizzaPartyAppModule { }\n","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xvbmUtZGlhbG9nL2Nsb25lLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2Nsb25lLWRpYWxvZy9jbG9uZS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n  <h2>{{title}} agent</h2>\\n</section>\\n\\n<mat-list role=\\\"list\\\">\\n  <mat-list-item role=\\\"listitem\\\" *ngIf=\\\"title=='Clone'\\\">\\n    <form>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Agent new name\\\" [(ngModel)]=\\\"name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-list-item>\\n  <mat-list-item role=\\\"listitem\\\">\\n    <form>\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Container\\\" [(ngModel)]=\\\"cont\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      </mat-form-field>\\n    </form>\\n  </mat-list-item>\\n</mat-list>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\n\n@Component({\n    selector: 'app-clone-dialog',\n    templateUrl: './clone-dialog.component.html',\n    styleUrls: ['./clone-dialog.component.css']\n})\n\nexport class CloneDialogComponent implements OnInit {\n\n    title = '';\n    name = '';\n    cont = '';\n\n    selection: string;\n\n    constructor(private dialogRef: MatDialogRef < CloneDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {}\n\n    ngOnInit() {\n        console.log(this.data)\n        this.title = this.data[1];\n        this.selection = this.data[2];\n    }\n\n    private send(): void {\n        if (this.title == 'Clone') {\n            let params = new HttpParams().set(\"name\", this.selection).set(\"container\", this.cont).set(\"newname\", this.name);\n            this.http.get('http://localhost:2020/clone', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'Migrate') {\n            let params = new HttpParams().set(\"name\", this.selection).set(\"container\", this.cont);\n            this.http.get('http://localhost:2020/migrate', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'Thaw') {\n            let params = new HttpParams().set(\"name\", this.selection).set(\"container\", this.cont);\n            this.http.get('http://localhost:2020/thaw', {\n                params: params\n            }).subscribe(data => console.log(data));\n        }\n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","import { Injectable } from '@angular/core';\nimport {\n    HttpClient\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class DataTransferService{\n\n    constructor(private http: HttpClient){}\n\n    // selected node name\n    selection: string = '';\n\n    // last agent that changed status\n    name: string = '';\n    container: string = '';\n    state: string = '';\n\n    ip: string;\n\n    TREE_DATA: Node[] = [];\n\n    public needRefresh = new BehaviorSubject(false);\n    refreshStatus = this.needRefresh.asObservable();\n\n    changeRefreshStatus(tf: boolean) {\n        this.needRefresh.next(tf);\n    }\n\n    // Retrive the initial tree, shouldn't be used after initialization\n    // Add or remove nodes from TREE_DATA and use changeRefreshStatus(true)\n    // instead\n    public getTree() :Promise<Node[]>{\n        let platform = '';\n        let container = '';\n        let agents: string[] = [];\n        return this.http.get('http://localhost:2020/containerName', {\n            responseType: 'text'\n        }).toPromise().then(data => {\n            container = data;\n            // console.log(container);\n\n            return this.http.get('http://localhost:2020/platformName', {\n                responseType: 'text'\n            }).toPromise().then(data => {\n                platform = data;\n                this.ip = platform;\n                // console.log(platform);\n\n                return this.http.get('http://localhost:2020/agentsName').toPromise().then(data => {\n                    // console.log(data);\n                    // console.log(typeof data);\n\n\n                    let agentlist: Node[] = [];\n                    for (let i in data) {\n                        agents.push(data[i]);\n                        let ag = new Node(agents[i]);\n                        agentlist.push(ag);\n                    }\n                    let maincontainer: Node[] = [{\n                        name: container,\n                        childNode: agentlist\n                    }];\n                    let ip: Node[] = [{\n                        name: platform,\n                        childNode: maincontainer\n                    }];\n                    this.TREE_DATA.push({\n                        name: 'Agent Platforms',\n                        childNode: ip\n                    });\n                    console.log(this.TREE_DATA);\n                    return this.TREE_DATA;\n                    // this.tree.renderNodeChanges(this.TREE_DATA);\n                });\n            });\n        });\n    }\n\n    public remove(): void{\n        var i = 0;\n        var j = 0;\n        var m = 0;\n        var n = 0;\n        this.TREE_DATA.forEach(node => {\n            this.TREE_DATA[i].childNode.forEach(subnode => {\n                this.TREE_DATA[i].childNode[j].childNode.forEach(subsubnode => {\n                    this.TREE_DATA[i].childNode[j].childNode[m].childNode.forEach(subsubsubnode =>{\n                        if(subsubsubnode.name == this.selection){\n                            this.TREE_DATA[i].childNode[j].childNode[m].childNode.splice(n,1);\n                        }\n                        n++;\n                    })\n                    m++;\n                });\n                j++;\n            });\n            i++;\n        });\n        // console.log(this.TREE_DATA);\n    }\n\n    public add(name: string, container: string): void{\n        var i = 0;\n        var j = 0;\n        var m = 0;\n        var existing = false;\n        this.TREE_DATA.forEach(node => {\n            this.TREE_DATA[i].childNode.forEach(subnode => {\n                this.TREE_DATA[i].childNode[j].childNode.forEach(subsubnode => {\n                    if(subsubnode.name == container){\n                        this.TREE_DATA[i].childNode[j].childNode[m].childNode.forEach(subsubsubnode =>{\n                            if(subsubsubnode.name.indexOf(name) !== -1){\n                                existing = true;\n                            }\n                        })\n                        if(existing == false){\n                            this.TREE_DATA[i].childNode[j].childNode[m].childNode.push(new Node(name + '@' + this.ip));\n                        }\n                    }\n                });\n                m++;\n            });\n            j++;\n        });\n        i++;\n    }\n\n    public updateFromRemote(): void{\n        this.http.get('http://localhost:2020/update', {\n            responseType: 'text'\n        }).subscribe(data => {\n            var n = 0;\n            var value: string = String(data);\n            var name: string = '';\n            var container: string = '';\n            var state: string = '';\n            while(value.charAt(n) != '?'){\n                name = name.concat(value.charAt(n));\n                n++;\n            };\n            n++;\n            while(value.charAt(n) != '?'){\n                container = container.concat(value.charAt(n));\n                n++;\n            };\n            n++\n            while(value.length >= n){\n                state = state.concat(value.charAt(n));\n                n++;\n            }\n            if(this.name != name || this.container != container || this.state != state){\n                if(state == \"addedd\"){\n                    var i = 0;\n                    var j = 0;\n                    var m = 0;\n                    this.TREE_DATA.forEach(node => {\n                        this.TREE_DATA[i].childNode.forEach(subnode => {\n                            this.TREE_DATA[i].childNode[j].childNode.forEach(subsubnode => {\n                                if(subsubnode.name == container){\n                                    this.TREE_DATA[i].childNode[j].childNode[m].childNode.push(new Node(name));\n                                }\n                                m++;\n                            });\n                            j++;\n                        });\n                        i++;\n                    });\n                }\n                if(state == \"removed\"){\n                    var i = 0;\n                    var j = 0;\n                    var m = 0;\n                    n = 0;\n                    this.TREE_DATA.forEach(node => {\n                        this.TREE_DATA[i].childNode.forEach(subnode => {\n                            this.TREE_DATA[i].childNode[j].childNode.forEach(subsubnode => {\n                                this.TREE_DATA[i].childNode[j].childNode[m].childNode.forEach(subsubsubnode =>{\n                                    if(subsubsubnode.name == name){\n                                        this.TREE_DATA[i].childNode[j].childNode[m].childNode.splice(n,1);\n                                    }\n                                    n++;\n                                })\n                                m++;\n                            });\n                            j++;\n                        });\n                        i++;\n                    });\n                }\n                this.name = name;\n                this.container = container;\n                this.state = state;\n                this.changeRefreshStatus(true);\n            }\n        })\n    }\n\n}\n\nexport class Node {\n    name: string = '';\n    childNode ? : Node[];\n    constructor(name_, childnode_ ? ) {\n        this.name = name_;\n        this.childNode = childnode_;\n    }\n}\n","module.exports = \"mat-expansion-panel{\\n    margin:0;\\n    border-radius: 0;\\n}\\nmat-expansion-panel p{\\n    cursor: pointer;\\n}\\nmat-expansion-panel p:hover{\\n    color: rgb(92, 116, 221);\\n    background-color: rgba(1, 1, 1, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1tZW51L21haW4tbWVudS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksUUFBUTtJQUNSLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksd0JBQXdCO0lBQ3hCLG9DQUFvQztBQUN4QyIsImZpbGUiOiJzcmMvYXBwL21haW4tbWVudS9tYWluLW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1leHBhbnNpb24tcGFuZWx7XG4gICAgbWFyZ2luOjA7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbn1cbm1hdC1leHBhbnNpb24tcGFuZWwgcHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5tYXQtZXhwYW5zaW9uLXBhbmVsIHA6aG92ZXJ7XG4gICAgY29sb3I6IHJnYig5MiwgMTE2LCAyMjEpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMSwgMSwgMSwgMC4xKTtcbn0iXX0= */\"","module.exports = \"<mat-accordion [multi]=\\\"true\\\">\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    File\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>Close RMA agent</p>\\n          <p>Exit this container</p>\\n          <p>Shut down AgentPlatform</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Actions\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p (click)=\\\"startDialog()\\\">Start new agent</p>\\n          <p (click)=\\\"securityDialog('kill')\\\">Kill</p>\\n          <p (click)=\\\"securityDialog('suspend')\\\">Suspend</p>\\n          <p (click)=\\\"securityDialog('resume')\\\">Resume</p>\\n          <!-- <p (click)=\\\"messageDialog()\\\">Send message</p> -->\\n          <p (click)=\\\"cloneDialog('Migrate')\\\">Migrate agent</p>\\n          <p (click)=\\\"cloneDialog('Clone')\\\">Clone agent</p>\\n          <p>Load agent</p>\\n          <p (click)=\\\"securityDialog('save')\\\">Save agent</p>\\n          <p (click)=\\\"securityDialog('freeze')\\\">Freeze agent</p>\\n          <!-- FIXME: THAW need a container as input, maybe cloneDialog can be used -->\\n          <p (click)=\\\"cloneDialog('Thaw')\\\">Thaw agent</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Tools\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <!-- WARNING sniffer router need a different name from the sniffer endpoint; snifferRouter is suggested \\n               (routerLinking inside typescript) -->\\n          <p (click)=\\\"startSniffer()\\\">Start sniffer</p>\\n          <p (click)=\\\"startDummy()\\\">Start dummy agent</p>\\n          <p>Show the DF GUI</p>\\n          <p (click)=\\\"startIntrospector()\\\">Start introspector agent</p>\\n          <p (click)=\\\"startLog()\\\">Start log manager agent</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Remote Platforms\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>Add platform via AMS AID</p>\\n          <p>Add platform via URL</p>\\n          <p>View AP description</p>\\n          <p>Refresh AP description</p>\\n          <p>Remove remote platform</p>\\n          <p>Refresh agent list</p>\\n     </mat-expansion-panel>\\n     <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n               <mat-panel-title>\\n                    Help\\n               </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <p>About Jade</p>\\n     </mat-expansion-panel>\\n</mat-accordion>\"","import {\n    Component,\n    OnInit\n} from '@angular/core';\nimport {\n    MatDialog,\n    MatDialogRef,\n    MatSnackBar\n} from '@angular/material';\nimport {\n    StartDialogComponent\n} from '../start-dialog/start-dialog.component'\nimport {\n    CloneDialogComponent\n} from '../clone-dialog/clone-dialog.component'\nimport {\n    SecurityDialogComponent\n} from '../security-dialog/security-dialog.component'\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\nimport {\n    Router\n} from '@angular/router';\nimport {\n    DataTransferService\n} from '../data-transfer.service';\n\n@Component({\n    selector: 'app-main-menu',\n    templateUrl: './main-menu.component.html',\n    styleUrls: ['./main-menu.component.css']\n})\nexport class MainMenuComponent implements OnInit {\n\n    ngOnInit() {}\n\n    selection = '';\n\n    startDialogRef: MatDialogRef < StartDialogComponent > ;\n    cloneDialogRef: MatDialogRef < CloneDialogComponent > ;\n    securityDialogRef: MatDialogRef < SecurityDialogComponent > ;\n\n    constructor(private dialog: MatDialog, private snackBar: MatSnackBar, private http: HttpClient, private router: Router, private dataService: DataTransferService) {}\n\n\n    checkSelection() {\n        this.selection = this.dataService.selection;\n    }\n\n    startDialog() {\n        this.startDialogRef = this.dialog.open(StartDialogComponent, {\n            data: {\n                1: this.dataService\n            }\n        });\n    }\n\n    cloneDialog(title: string) {\n        this.checkSelection();\n        if (this.selection.indexOf('@') !== -1 && this.selection != '') {\n            this.cloneDialogRef = this.dialog.open(CloneDialogComponent, {\n                data: {\n                    1: title,\n                    2: this.selection\n                }\n            });\n            this.snackBar.open(\"Warning: Some agents might not be able to migrate or be cloned because of lack of serialization support in their implementation. If you are not sure about the  implemementation of this agent, Cancel this operation.\", \"Dismiss\", {\n                duration: 16000,\n            });\n        } else {\n            this.snackBar.open(\"You must select an agent in the tree\", \"Dismiss\", {\n                duration: 2000,\n            });\n        } \n    }\n\n    securityDialog(title: string) {\n        this.checkSelection();\n        this.securityDialogRef = this.dialog.open(SecurityDialogComponent, {\n            data: {\n                1: title,\n                2: this.selection,\n                3: this.dataService\n            }\n        });\n    }\n\n    startSniffer() {\n        this.checkSelection();\n        if (this.selection.indexOf('@') == -1 && this.selection != '') {\n            console.log(\"Starting sniffer on \" + this.selection);\n            let params = new HttpParams().set(\"container\", this.selection);\n            this.http.get('http://localhost:2020/sniffer', {\n                params: params\n            }).subscribe(data => console.log(data));\n            this.router.navigate(['/sniffer']);\n        } else {\n            this.snackBar.open(\"You must select an agent-platform or an agent-container in the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n    startDummy() {\n        this.checkSelection();\n        if (this.selection.indexOf('@') == -1 && this.selection != '') {\n            console.log(\"Starting dummy on \" + this.selection);\n            let params = new HttpParams().set(\"container\", this.selection);\n            this.http.get('http://localhost:2020/dummy', {\n                params: params\n            }).subscribe(data => console.log(data));\n            this.router.navigate(['/dummy']);\n        } else {\n            this.snackBar.open(\"You must select an agent-platform or an agent-container in the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n    startIntrospector() {\n        this.checkSelection();\n        if (this.selection.indexOf('@') == -1 && this.selection != '') {\n            console.log(\"Starting introspector on \" + this.selection);\n            let params = new HttpParams().set(\"container\", this.selection);\n            this.http.get('http://localhost:2020/introspector', {\n                params: params\n            }).subscribe(data => console.log(data));\n            this.router.navigate(['/introspector']);\n        } else {\n            this.snackBar.open(\"You must select an agent-platform or an agent-container in the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n    startLog() {\n        this.checkSelection();\n        if (this.selection.indexOf('@') == -1 && this.selection != '') {\n            console.log(\"Starting log-manager on \" + this.selection);\n            let params = new HttpParams().set(\"container\", this.selection);\n            this.http.get('http://localhost:2020/log', {\n                params: params\n            }).subscribe(data => console.log(data));\n            this.router.navigate(['/log']);\n        } else {\n            this.snackBar.open(\"You must select an agent-platform or an agent-container in the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n}","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VjdXJpdHktZGlhbG9nL3NlY3VyaXR5LWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3NlY3VyaXR5LWRpYWxvZy9zZWN1cml0eS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <h3>Are you sure you want to {{title}} this agent?</h3>\\n</section>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\nimport {\n    DataTransferService\n} from '../data-transfer.service';\n\n@Component({\n    selector: 'app-security-dialog',\n    templateUrl: './security-dialog.component.html',\n    styleUrls: ['./security-dialog.component.css']\n})\nexport class SecurityDialogComponent implements OnInit {\n\n    title = '';\n    selection: string;\n    dataService :DataTransferService;\n    status: boolean;\n\n\n\n    constructor(private dialogRef: MatDialogRef < SecurityDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {\n    }\n    \n    ngOnInit() {\n        console.log(this.data)\n        this.title = this.data[1];\n        this.selection = this.data[2];\n        this.dataService = this.data[3];\n    }\n\n    private send(): void {\n        console.log(this.selection);\n        let params = new HttpParams().set(\"name\", this.selection);\n        if (this.title == 'kill') {\n            this.http.get('http://localhost:2020/kill', {\n                params: params, observe : 'response'\n            }).subscribe(data => {\n                console.log(data);\n                if(data.statusText == \"OK\"){\n                    this.dataService.remove();\n                    this.dataService.changeRefreshStatus(true);\n                };\n            });\n        } else if (this.title == 'suspend') {\n            this.http.get('http://localhost:2020/suspend', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'resume') {\n            this.http.get('http://localhost:2020/resume', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'freeze') {\n            this.http.get('http://localhost:2020/freeze', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'thaw') {\n            this.http.get('http://localhost:2020/thaw', {\n                params: params\n            }).subscribe(data => console.log(data));\n        } else if (this.title == 'save') {\n            this.http.get('http://localhost:2020/save', {\n                params: params\n            }).subscribe(data => console.log(data));\n        }\n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","module.exports = \"button{\\n    margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RhcnQtZGlhbG9nL3N0YXJ0LWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3N0YXJ0LWRpYWxvZy9zdGFydC1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcbiAgICBtYXJnaW46IDAgMTBweDtcbn0iXX0= */\"","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <h2>Start new agent</h2>\\n</section>\\n\\n<mat-list role=\\\"list\\\">\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Agent name\\\" [(ngModel)]=\\\"name\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Class name\\\" [(ngModel)]=\\\"clas\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Arguments\\\" [(ngModel)]=\\\"args\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Owner\\\" [(ngModel)]=\\\"own\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\">\\n        <form>\\n            <mat-form-field>\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Container\\\" [(ngModel)]=\\\"cont\\\"\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" required=true>\\n            </mat-form-field>\\n        </form>\\n    </mat-list-item>\\n</mat-list>\\n\\n<button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\n<button mat-button (click)=\\\"send()\\\">OK</button>\"","import {\n    Component,\n    OnInit,\n    Inject\n} from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material';\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\nimport {\n    DataTransferService\n} from '../data-transfer.service';\n\n@Component({\n    selector: 'app-start-dialog',\n    templateUrl: './start-dialog.component.html',\n    styleUrls: ['./start-dialog.component.css']\n})\n\nexport class StartDialogComponent implements OnInit {\n\n    name = '';\n    clas = 'jade.core.Agent';\n    args = '';\n    own = '';\n    cont = 'MainContainer';\n    dataService: DataTransferService;\n\n    ngOnInit() {\n        console.log(this.data)\n        this.dataService = this.data[1];\n    }\n\n    constructor(private dialogRef: MatDialogRef < StartDialogComponent > , @Inject(MAT_DIALOG_DATA) public data: any, private http: HttpClient) {}\n\n    private send(): void {\n        let params = new HttpParams().set(\"name\", this.name).set(\"clas\", this.clas).set(\"args\", this.args).set(\"owner\", this.own).set(\"container\", this.cont);\n        this.http.get('http://localhost:2020/start', {\n            params: params, observe : 'response'\n        }).subscribe(data => {\n            console.log(data);\n            if(data.statusText == \"OK\"){\n                // this.dataService.add();\n                this.dataService.add(this.name, this.cont);\n                this.dataService.changeRefreshStatus(true);\n            };\n        });\n        this.dialogRef.close();\n    }\n\n    private cancel(): void {\n        this.dialogRef.close();\n    }\n\n}","module.exports = \"mat-toolbar{\\n    position: absolute;\\n    top: 0;\\n}\\nbutton{\\n    padding-left: 6px;\\n    padding-right: 6px;\\n    min-width: 0px;\\n    margin: 0 6px;\\n}\\nmat-toolbar button{\\n    background-color: rgb(92, 116, 221);\\n    color: white;\\n}\\n#close{\\n    background-color: rgba(255, 0, 0, 0.6);\\n    color: white;\\n}\\n#other{\\n    border: 3px solid black;\\n}\\n.sniffed{\\n    padding: 8px;\\n    background-color: gray;\\n    color: white;\\n    margin: 12px;\\n    display: inline-flex;\\n    border: 3px solid deeppink;\\n}\\n.showed{\\n    padding: 8px;\\n    background-color: gray;\\n    color: white;\\n    margin: 12px;\\n    display: inline-flex;\\n    border: 3px solid orange;\\n}\\n.dummyControl{\\n    width: 40%;\\n    border: 1px solid black;\\n    display: inline-block;\\n    text-align: center;\\n    min-height: 800px;\\n}\\n.dummyMessages{\\n    width: calc(60% - 22px);\\n    border: 1px solid black;\\n    display: inline-block;\\n    min-height: 800px;\\n}\\n.dualSelector{\\n    display: inline;\\n    border: 1px solid gray;\\n    text-align: center;\\n    padding: 0 6px;\\n}\\n.introspectorGrid{\\n    display: grid;\\n    grid-template-areas:\\n      'in in in out out out'\\n      'st be be be  be  be';\\n    grid-gap: 10px;\\n    min-height: 800px;\\n}\\n.intrGridElement{\\n    border: 2px solid gray;\\n}\\n#item1{\\n    text-align: center;\\n    grid-area: in;\\n}\\n#item2{\\n    text-align: center;\\n    grid-area: out;\\n}\\n#item3{\\n    text-align: center;\\n    grid-area: st;\\n}\\n#item4{\\n    text-align: center;\\n    grid-area: be;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdC90ZXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsTUFBTTtBQUNWO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxtQ0FBbUM7SUFDbkMsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksc0NBQXNDO0lBQ3RDLFlBQVk7QUFDaEI7QUFHQTtJQUNJLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixZQUFZO0lBQ1osWUFBWTtJQUNaLG9CQUFvQjtJQUNwQiwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsd0JBQXdCO0FBQzVCO0FBSUE7SUFDSSxVQUFVO0lBQ1YsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7QUFJQTtJQUNJLGFBQWE7SUFDYjs7MkJBRXVCO0lBQ3ZCLGNBQWM7SUFDZCxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtBQUNqQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC10b29sYmFye1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG59XG5idXR0b257XG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XG4gICAgcGFkZGluZy1yaWdodDogNnB4O1xuICAgIG1pbi13aWR0aDogMHB4O1xuICAgIG1hcmdpbjogMCA2cHg7XG59XG5tYXQtdG9vbGJhciBidXR0b257XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDkyLCAxMTYsIDIyMSk7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuI2Nsb3Nle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAwLCAwLCAwLjYpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuXG4jb3RoZXJ7XG4gICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7XG59XG4uc25pZmZlZHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbWFyZ2luOiAxMnB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGJvcmRlcjogM3B4IHNvbGlkIGRlZXBwaW5rO1xufVxuLnNob3dlZHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgbWFyZ2luOiAxMnB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIGJvcmRlcjogM3B4IHNvbGlkIG9yYW5nZTtcbn1cblxuXG5cbi5kdW1teUNvbnRyb2x7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1pbi1oZWlnaHQ6IDgwMHB4O1xufVxuLmR1bW15TWVzc2FnZXN7XG4gICAgd2lkdGg6IGNhbGMoNjAlIC0gMjJweCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1pbi1oZWlnaHQ6IDgwMHB4O1xufVxuLmR1YWxTZWxlY3RvcntcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMCA2cHg7XG59XG5cblxuXG4uaW50cm9zcGVjdG9yR3JpZHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgICAnaW4gaW4gaW4gb3V0IG91dCBvdXQnXG4gICAgICAnc3QgYmUgYmUgYmUgIGJlICBiZSc7XG4gICAgZ3JpZC1nYXA6IDEwcHg7XG4gICAgbWluLWhlaWdodDogODAwcHg7XG59XG4uaW50ckdyaWRFbGVtZW50e1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG59XG4jaXRlbTF7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdyaWQtYXJlYTogaW47XG59XG4jaXRlbTJ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGdyaWQtYXJlYTogb3V0O1xufVxuI2l0ZW0ze1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBncmlkLWFyZWE6IHN0O1xufVxuI2l0ZW00e1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBncmlkLWFyZWE6IGJlO1xufVxuIl19 */\"","module.exports = \"\\n<div>\\n    <mat-toolbar>\\n        <button mat-button routerLink=\\\"/\\\" id=\\\"close\\\">Close</button>\\n\\n        <span *ngIf=\\\"isSniffer\\\">\\n            <button mat-button>Clear</button>\\n            <button mat-button>Open</button>\\n            <button mat-button>Save</button>\\n            <button mat-button>Write</button>\\n            <button mat-button (click)=\\\"addSniffed()\\\">Do Sniff</button>\\n            <button mat-button (click)=\\\"removeSniffed()\\\">Don't Sniff</button>\\n            <button mat-button (click)=\\\"addShowed()\\\">Show only</button>\\n        </span>\\n\\n        <span *ngIf=\\\"isLog\\\">\\n            <button mat-button>Set default logging</button>\\n            <button mat-button>Start log</button>\\n            <button mat-button>Stop log</button>\\n        </span>\\n\\n        <span *ngIf=\\\"isDummy\\\">\\n            <button mat-button>Reset</button>\\n            <button mat-button>Send</button>\\n            <button mat-button>Open</button>\\n            <button mat-button>Save</button>\\n            <button mat-button>Open queue</button>\\n            <button mat-button>Save queue</button>\\n            <button mat-button>Set as current</button>\\n            <button mat-button>Reply</button>\\n            <button mat-button>View</button>\\n            <button mat-button>Delete</button>\\n        </span>\\n\\n        <span *ngIf=\\\"isIntrospector\\\">\\n            <button mat-button>Debug On</button>\\n            <button mat-button>Debug Off</button>\\n            <button mat-button>Step</button>\\n            <button mat-button>Break</button>\\n            <button mat-button>Slow</button>\\n            <button mat-button>Go</button>\\n        </span>\\n\\n                \\n\\n    </mat-toolbar>\\n    <div *ngIf=\\\"isSniffer\\\">\\n        <div class=\\\"sniffed\\\" id=\\\"other\\\">\\n            Other\\n        </div>\\n        <div class=\\\"sniffed\\\" *ngFor=\\\"let agent of sniffed\\\">\\n            {{agent}}\\n        </div>\\n        <div class=\\\"showed\\\" *ngFor=\\\"let agent of showed\\\">\\n            {{agent}}\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"isDummy\\\">\\n        <div class=\\\"dummyControl\\\">\\n            <div class=\\\"dualSelector\\\">\\n                ACL Message\\n            </div>\\n            <div class=\\\"dualSelector\\\">\\n                Envelope\\n            </div>\\n        </div>\\n        <div class=\\\"dummyMessages\\\">\\n            <p>Testo di prova</p>\\n        </div>\\n    </div>\\n\\n    <p *ngIf=\\\"isLog\\\">\\n        Log works!\\n    </p>\\n\\n    <div *ngIf=\\\"isIntrospector\\\" class=\\\"introspectorGrid\\\">\\n        <div class=\\\"intrGridElement\\\" id=\\\"item1\\\">\\n            <p>Incoming Messages</p>\\n            <div class=\\\"dualSelector\\\">\\n                Pending\\n            </div>\\n            <div class=\\\"dualSelector\\\">\\n                Received\\n            </div>\\n        </div>\\n        <div class=\\\"intrGridElement\\\" id=\\\"item2\\\">\\n            <p>Outgoing Messages</p>\\n            <div class=\\\"dualSelector\\\">\\n                Pending\\n            </div>\\n            <div class=\\\"dualSelector\\\">\\n                Received\\n            </div>\\n        </div>\\n        <div class=\\\"intrGridElement\\\" id=\\\"item3\\\">\\n            Current State\\n        </div>\\n        <div class=\\\"intrGridElement\\\" id=\\\"item4\\\">\\n            Behaviours\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import {\n    Component,\n    OnInit\n} from '@angular/core';\nimport {\n    ActivatedRoute\n} from '@angular/router';\nimport {\n    DataTransferService\n} from '../data-transfer.service';\nimport {\n    MatSnackBar\n} from '@angular/material';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute, private dataService: DataTransferService, private snackBar: MatSnackBar) {}\n\n    isSniffer = false;\n    isDummy = false;\n    isIntrospector = false;\n    isLog = false;\n\n    sniffed: string[] = [];\n    showed: string[] = [];\n\n\n    ngOnInit() {\n        var name: string;\n        this.route.data.subscribe(data => name = data['name']);\n        console.log(name);\n        if (name == 'sniffer') {\n            this.isSniffer = true;\n            this.isDummy = false;\n            this.isIntrospector = false;\n            this.isLog = false;\n        } else if (name == 'dummy') {\n            this.isDummy = true;\n            this.isSniffer = false;\n            this.isIntrospector = false;\n            this.isLog = false;\n        } else if (name == 'introspector') {\n            this.isIntrospector = true;\n            this.isSniffer = false;\n            this.isDummy = false;\n            this.isLog = false;\n        } else if (name == 'log-manager') {\n            this.isLog = true;\n            this.isSniffer = false;\n            this.isDummy = false;\n            this.isIntrospector = false;\n        }\n    }\n\n    addSniffed() {\n        let selection: string = '';\n        let index: number = this.dataService.selection.indexOf('@');\n        if (index != -1) {\n            for (var i = 0; i < index; i++) {\n                selection = selection.concat(this.dataService.selection.charAt(i));\n            }\n            this.sniffed.push(selection);\n        } else {\n            this.snackBar.open(\"You must select an agent from the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n    removeSniffed() {\n        let selection: string = '';\n        let index: number = this.dataService.selection.indexOf('@');\n        if (index != -1) {\n            for (var i = 0; i < index; i++) {\n                selection = selection.concat(this.dataService.selection.charAt(i));\n            }\n            this.showed = this.showed.filter(obj => obj !== selection);\n            this.sniffed = this.sniffed.filter(obj => obj !== selection);\n        } else {\n            this.snackBar.open(\"You must select an agent from the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n    addShowed() {\n        let selection: string = '';\n        let index: number = this.dataService.selection.indexOf('@');\n        if (index != -1) {\n            for (var i = 0; i < index; i++) {\n                selection = selection.concat(this.dataService.selection.charAt(i));\n            }\n            this.showed.push(selection);\n        } else {\n            this.snackBar.open(\"You must select an agent from the tree\", \"Dismiss\", {\n                duration: 4000,\n            });\n        }\n    }\n\n}","module.exports = \".example-tree-invisible {\\n    display: none;\\n  }\\n  \\n  .example-tree ul,\\n  .example-tree li {\\n    margin-top: 0;\\n    margin-bottom: 0;\\n    list-style-type: none;\\n  }\\n  \\n  .example-tree-node {\\n    display: block;\\n  }\\n  \\n  .example-tree-node .example-tree-node {\\n    padding-left: 40px;\\n  }\\n  \\n  .example-tree-progress-bar {\\n    margin-left: 30px;\\n  }\\n  \\n  .example-tree-nested-node {\\n    padding-left: 30px;\\n  }\\n  \\n  /* span:focus{\\n      outline: none;\\n  } */\\n  \\n  span{\\n      cursor: pointer;\\n      border: 5px solid transparent;\\n      padding-right: 8px;\\n  }\\n  \\n  .focusClass{\\n    background-color: rgb(92, 116, 221);\\n    color: white;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdHJlZS90cmVlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0VBQ2Y7O0VBRUE7O0lBRUUsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixxQkFBcUI7RUFDdkI7O0VBQ0E7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBOztLQUVHOztFQUNIO01BQ0ksZUFBZTtNQUNmLDZCQUE2QjtNQUM3QixrQkFBa0I7RUFDdEI7O0VBQ0E7SUFDRSxtQ0FBbUM7SUFDbkMsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvdHJlZS90cmVlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS10cmVlLWludmlzaWJsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtdHJlZSB1bCxcbiAgLmV4YW1wbGUtdHJlZSBsaSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfVxuICAuZXhhbXBsZS10cmVlLW5vZGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIFxuICAuZXhhbXBsZS10cmVlLW5vZGUgLmV4YW1wbGUtdHJlZS1ub2RlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gIH1cblxuICAuZXhhbXBsZS10cmVlLXByb2dyZXNzLWJhciB7XG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIH1cbiAgXG4gIC5leGFtcGxlLXRyZWUtbmVzdGVkLW5vZGUge1xuICAgIHBhZGRpbmctbGVmdDogMzBweDtcbiAgfVxuXG4gIC8qIHNwYW46Zm9jdXN7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICB9ICovXG4gIHNwYW57XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBib3JkZXI6IDVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgfVxuICAuZm9jdXNDbGFzc3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoOTIsIDExNiwgMjIxKTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH0iXX0= */\"","module.exports = \"\\n\\n<!-- <button (click)='platformName()'>platformName</button> -->\\n\\n<cdk-tree #tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <!-- This is the tree node template for leaf nodes -->\\n    <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node\\\" class=\\\"example-tree-node\\\">\\n        <!-- use a disabled button to provide padding for tree leaf -->\\n        <button mat-icon-button disabled *ngIf='node.name;else other_content'></button>\\n        <span tabindex=\\\"1\\\" (click)=\\\"focus(node.name)\\\" [ngClass]=\\\"{focusClass: selected == node.name}\\\">\\n            {{node.name}}\\n        </span>\\n        <ng-template #other_content>Qui se non esiste il nome della cartella ma solo gli agenti</ng-template>\\n        <!-- {{node.agents.name}} -->\\n    </cdk-nested-tree-node>\\n    <!-- This is the tree node template for expandable nodes -->\\n    \\n\\n\\n    <cdk-nested-tree-node *cdkTreeNodeDef=\\\"let node; when: hasChild\\\" class=\\\"example-tree-node\\\">\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.name\\\" cdkTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <span tabindex=\\\"1\\\" (click)=\\\"focus(node.name)\\\" [ngClass]=\\\"{focusClass: selected == node.name}\\\">\\n            {{node.name}}\\n        </span>\\n        <div [class.example-tree-invisible]=\\\"!treeControl.isExpanded(node)\\\">\\n            <ng-container cdkTreeNodeOutlet></ng-container>\\n        </div>\\n    </cdk-nested-tree-node>\\n</cdk-tree>\\n\\n<button (click)='addContainer()'>Add container test button</button>\"","import {\n    Component,\n    OnInit,\n    ViewChild,\n    Injectable,\n} from '@angular/core';\nimport {\n    ArrayDataSource\n} from '@angular/cdk/collections';\nimport {\n    NestedTreeControl\n} from '@angular/cdk/tree';\n\nimport {\n    DataTransferService\n} from '../data-transfer.service';\nimport { Node } from '../data-transfer.service';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'app-tree',\n    templateUrl: './tree.component.html',\n    styleUrls: ['./tree.component.css']\n})\nexport class TreeComponent implements OnInit {\n\n    VOID_DATA: Node[] = [];\n    \n    treeControl = new NestedTreeControl < Node > (node => node.childNode);\n    dataSource = new ArrayDataSource(this.dataService.TREE_DATA);\n    TREE_DATA: Node[] = [];\n    status: boolean;\n\n\n    @ViewChild('tree') tree;\n\n    constructor(private dataService: DataTransferService, private http: HttpClient) {\n    }\n\n\n    // FIXME: unecessary\n    selected = '';\n    interval: any;\n\n    ngOnInit() {\n        this.dataService.getTree().then(\n            protoTree => {\n                this.TREE_DATA = protoTree;\n                this.tree.renderNodeChanges(this.TREE_DATA);\n            }\n        );\n        this.dataService.refreshStatus.subscribe(status => {\n            if (status == true) {\n                this.tree.renderNodeChanges(this.VOID_DATA);\n                this.tree.renderNodeChanges(this.dataService.TREE_DATA);\n            } \n        });\n        this.interval = setInterval(() => { \n            this.dataService.updateFromRemote(); \n        }, 5000);\n    }\n\n    focus(selected_: string): void {\n        this.selected = selected_;\n        // any time there is a click on the tree, the selected element is stored in a DataTransferService\n        this.dataService.selection = this.selected;\n    }\n\n\n    addContainer(): void {\n\n\n        this.dataService.updateFromRemote();\n\n\n\n        // METODO DI PROVA PER VERIFICARE LA POSSIBILITA DI AGGIORNARE L'ALBERO\n        // let agentlist: Node[] = [{\n        //     name: '3'\n        // }, {\n        //     name: '4'\n        // }];\n        // let newcontainer: Node = {\n        //     name: 'Second Container',\n        //     childNode: agentlist\n        // };\n        // this.dataService.TREE_DATA[0].childNode[0].childNode.push(newcontainer);\n    }\n    \n    hasChild = (_: number, node: Node) => !!node.childNode && node.childNode.length > 0;\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}